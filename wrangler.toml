name = "media-orchestrator"
main = "cloudflare/media-orchestrator/index.ts"
tsconfig = "cloudflare/media-orchestrator/tsconfig.json"
compatibility_date = "2025-10-19"

[dev]
port = 8787
local_protocol = "http"

workers_dev = true

[[r2_buckets]]
binding = "RENDER_BUCKET"
bucket_name = "vidgen-render"

[vars]
JOB_TTL_SECONDS = 86400
# Prefer external Docker Compose containers in local dev
PREFER_EXTERNAL_CONTAINERS = "false"
# Default container base; specific engines can override below
CONTAINER_BASE_URL = "http://localhost:8080"
# Audio transcoder engine (dev)
CONTAINER_BASE_URL_AUDIO = "http://localhost:8110"
# Workers AI (REST credentials) for ASR pipeline - set in your environment
# CF_AI_ACCOUNT_ID = "<your-account-id>"
# CF_AI_API_TOKEN = "<your-api-token>"
# Dedicated Remotion renderer container (dev)
CONTAINER_BASE_URL_REMOTION = "http://localhost:8090"
# Cloud download container (media-downloader)
CONTAINER_BASE_URL_DOWNLOADER = "http://localhost:8100"
NEXT_BASE_URL = "http://localhost:3000"
JOB_CALLBACK_HMAC_SECRET = "replace-with-strong-secret"
# 预签名 PUT 有效期（秒）：开发 600，生产可提升（如 1800）
PUT_EXPIRES = 600

# S3-compatible storage for both prod (R2 S3 endpoint) and dev (MinIO)
# For production with R2, set:
#   S3_ENDPOINT = "https://<accountid>.r2.cloudflarestorage.com"
#   S3_STYLE = "vhost"  # virtual host style
# For dev with MinIO, set:
#   S3_ENDPOINT = "http://127.0.0.1:9000"  (in docker network) or http://127.0.0.1:9000
#   S3_STYLE = "path"   # path style
S3_ENDPOINT = "http://127.0.0.1:9000"
S3_INTERNAL_ENDPOINT = "http://minio:9000"
S3_ACCESS_KEY_ID = "minioadmin"
S3_SECRET_ACCESS_KEY = "minioadmin"
S3_BUCKET_NAME = "vidgen-render"
S3_STYLE = "path"
S3_REGION = "us-east-1"
ORCHESTRATOR_BASE_URL_CONTAINER = "http://host.docker.internal:8787"

## Local development environment overrides
[env.local]
# Optionally give a distinct name for clarity
name = "media-orchestrator-local"

[env.local.vars]
# In local dev, prefer hitting Docker Compose services directly
PREFER_EXTERNAL_CONTAINERS = "true"
JOB_TTL_SECONDS = 86400
CONTAINER_BASE_URL = "http://localhost:8080"
CONTAINER_BASE_URL_AUDIO = "http://localhost:8110"
CONTAINER_BASE_URL_REMOTION = "http://localhost:8090"
CONTAINER_BASE_URL_DOWNLOADER = "http://localhost:8100"
NEXT_BASE_URL = "http://localhost:3000"
JOB_CALLBACK_HMAC_SECRET = "replace-with-strong-secret"
PUT_EXPIRES = 600
S3_ENDPOINT = "http://127.0.0.1:9000"
S3_INTERNAL_ENDPOINT = "http://minio:9000"
S3_ACCESS_KEY_ID = "minioadmin"
S3_SECRET_ACCESS_KEY = "minioadmin"
S3_BUCKET_NAME = "vidgen-render"
S3_STYLE = "path"
S3_REGION = "us-east-1"
ORCHESTRATOR_BASE_URL_CONTAINER = "http://host.docker.internal:8787"

[[env.local.kv_namespaces]]
binding = "JOBS"
id = "local-jobs-namespace"
preview_id = "local-jobs-namespace"

[[env.local.r2_buckets]]
binding = "RENDER_BUCKET"
bucket_name = "vidgen-render"

[[env.local.durable_objects.bindings]]
name = "RENDER_JOB_DO"
class_name = "RenderJobDO"

[[env.local.containers]]
class_name = "MediaDownloaderContainer"
image = "Dockerfile.media-downloader"
max_instances = 10

[[env.local.containers]]
class_name = "AudioTranscoderContainer"
image = "Dockerfile.audio-transcoder"
max_instances = 10

[[env.local.containers]]
class_name = "BurnerFfmpegContainer"
image = "Dockerfile.burner-ffmpeg"
max_instances = 10

[[env.local.containers]]
class_name = "RendererRemotionContainer"
image = "Dockerfile.renderer-remotion"
max_instances = 5

[[env.local.durable_objects.bindings]]
name = "MEDIA_DOWNLOADER"
class_name = "MediaDownloaderContainer"

[[env.local.durable_objects.bindings]]
name = "AUDIO_TRANSCODER"
class_name = "AudioTranscoderContainer"

[[env.local.durable_objects.bindings]]
name = "BURNER_FFMPEG"
class_name = "BurnerFfmpegContainer"

[[env.local.durable_objects.bindings]]
name = "RENDERER_REMOTION"
class_name = "RendererRemotionContainer"

## Production environment bindings (replace with real IDs before deploy)
[env.production]

[[env.production.kv_namespaces]]
binding = "JOBS"
# TODO: replace with your real KV namespace ID
id = "REPLACE_WITH_PROD_JOBS_NAMESPACE_ID"

[[durable_objects.bindings]]
name = "RENDER_JOB_DO"
class_name = "RenderJobDO"

[[migrations]]
tag = "v1-render-job-do"
new_classes = ["RenderJobDO"]

# Containers configuration (build and run media engines inside Cloudflare)
# Requires Workers Paid plan + Containers beta access.
[[containers]]
class_name = "MediaDownloaderContainer"
image = "Dockerfile.media-downloader"
max_instances = 10

[[containers]]
class_name = "AudioTranscoderContainer"
image = "Dockerfile.audio-transcoder"
max_instances = 10

[[containers]]
class_name = "BurnerFfmpegContainer"
image = "Dockerfile.burner-ffmpeg"
max_instances = 10

[[containers]]
class_name = "RendererRemotionContainer"
image = "Dockerfile.renderer-remotion"
max_instances = 5

[[durable_objects.bindings]]
name = "MEDIA_DOWNLOADER"
class_name = "MediaDownloaderContainer"

[[durable_objects.bindings]]
name = "AUDIO_TRANSCODER"
class_name = "AudioTranscoderContainer"

[[durable_objects.bindings]]
name = "BURNER_FFMPEG"
class_name = "BurnerFfmpegContainer"

[[durable_objects.bindings]]
name = "RENDERER_REMOTION"
class_name = "RendererRemotionContainer"

[[migrations]]
tag = "v2-containers"
new_sqlite_classes = [
  "MediaDownloaderContainer",
  "AudioTranscoderContainer",
  "BurnerFfmpegContainer",
  "RendererRemotionContainer",
]
